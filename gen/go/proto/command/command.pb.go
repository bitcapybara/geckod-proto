// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: proto/command/command.proto

package command

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Connect_AuthMethod int32

const (
	Connect_Unknown Connect_AuthMethod = 0
	Connect_Sha256  Connect_AuthMethod = 1
	Connect_Md5     Connect_AuthMethod = 2
)

// Enum value maps for Connect_AuthMethod.
var (
	Connect_AuthMethod_name = map[int32]string{
		0: "Unknown",
		1: "Sha256",
		2: "Md5",
	}
	Connect_AuthMethod_value = map[string]int32{
		"Unknown": 0,
		"Sha256":  1,
		"Md5":     2,
	}
)

func (x Connect_AuthMethod) Enum() *Connect_AuthMethod {
	p := new(Connect_AuthMethod)
	*p = x
	return p
}

func (x Connect_AuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Connect_AuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_command_proto_enumTypes[0].Descriptor()
}

func (Connect_AuthMethod) Type() protoreflect.EnumType {
	return &file_proto_command_command_proto_enumTypes[0]
}

func (x Connect_AuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Connect_AuthMethod.Descriptor instead.
func (Connect_AuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{1, 0}
}

type Producer_AccessMode int32

const (
	Producer_Unknown   Producer_AccessMode = 0
	Producer_Shared    Producer_AccessMode = 1
	Producer_Exclusive Producer_AccessMode = 2
)

// Enum value maps for Producer_AccessMode.
var (
	Producer_AccessMode_name = map[int32]string{
		0: "Unknown",
		1: "Shared",
		2: "Exclusive",
	}
	Producer_AccessMode_value = map[string]int32{
		"Unknown":   0,
		"Shared":    1,
		"Exclusive": 2,
	}
)

func (x Producer_AccessMode) Enum() *Producer_AccessMode {
	p := new(Producer_AccessMode)
	*p = x
	return p
}

func (x Producer_AccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Producer_AccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_command_proto_enumTypes[1].Descriptor()
}

func (Producer_AccessMode) Type() protoreflect.EnumType {
	return &file_proto_command_command_proto_enumTypes[1]
}

func (x Producer_AccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Producer_AccessMode.Descriptor instead.
func (Producer_AccessMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{3, 0}
}

type Subscribe_SubscriptionType int32

const (
	Subscribe_Unknown   Subscribe_SubscriptionType = 0
	Subscribe_Shared    Subscribe_SubscriptionType = 1
	Subscribe_Exclusive Subscribe_SubscriptionType = 2
)

// Enum value maps for Subscribe_SubscriptionType.
var (
	Subscribe_SubscriptionType_name = map[int32]string{
		0: "Unknown",
		1: "Shared",
		2: "Exclusive",
	}
	Subscribe_SubscriptionType_value = map[string]int32{
		"Unknown":   0,
		"Shared":    1,
		"Exclusive": 2,
	}
)

func (x Subscribe_SubscriptionType) Enum() *Subscribe_SubscriptionType {
	p := new(Subscribe_SubscriptionType)
	*p = x
	return p
}

func (x Subscribe_SubscriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subscribe_SubscriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_command_proto_enumTypes[2].Descriptor()
}

func (Subscribe_SubscriptionType) Type() protoreflect.EnumType {
	return &file_proto_command_command_proto_enumTypes[2]
}

func (x Subscribe_SubscriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subscribe_SubscriptionType.Descriptor instead.
func (Subscribe_SubscriptionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{5, 0}
}

type Ack_AckType int32

const (
	Ack_Unknown    Ack_AckType = 0
	Ack_Individual Ack_AckType = 1
	Ack_Cumulative Ack_AckType = 2
)

// Enum value maps for Ack_AckType.
var (
	Ack_AckType_name = map[int32]string{
		0: "Unknown",
		1: "Individual",
		2: "Cumulative",
	}
	Ack_AckType_value = map[string]int32{
		"Unknown":    0,
		"Individual": 1,
		"Cumulative": 2,
	}
)

func (x Ack_AckType) Enum() *Ack_AckType {
	p := new(Ack_AckType)
	*p = x
	return p
}

func (x Ack_AckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ack_AckType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_command_proto_enumTypes[3].Descriptor()
}

func (Ack_AckType) Type() protoreflect.EnumType {
	return &file_proto_command_command_proto_enumTypes[3]
}

func (x Ack_AckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ack_AckType.Descriptor instead.
func (Ack_AckType) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{9, 0}
}

type Error_Code int32

const (
	Error_Unknown          Error_Code = 0
	Error_ProducerNotFound Error_Code = 1
	Error_ConsumerNotFound Error_Code = 2
	Error_AuthenticateFail Error_Code = 3
	Error_UnmatchAckType   Error_Code = 4
)

// Enum value maps for Error_Code.
var (
	Error_Code_name = map[int32]string{
		0: "Unknown",
		1: "ProducerNotFound",
		2: "ConsumerNotFound",
		3: "AuthenticateFail",
		4: "UnmatchAckType",
	}
	Error_Code_value = map[string]int32{
		"Unknown":          0,
		"ProducerNotFound": 1,
		"ConsumerNotFound": 2,
		"AuthenticateFail": 3,
		"UnmatchAckType":   4,
	}
)

func (x Error_Code) Enum() *Error_Code {
	p := new(Error_Code)
	*p = x
	return p
}

func (x Error_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_command_command_proto_enumTypes[4].Descriptor()
}

func (Error_Code) Type() protoreflect.EnumType {
	return &file_proto_command_command_proto_enumTypes[4]
}

func (x Error_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_Code.Descriptor instead.
func (Error_Code) EnumDescriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{13, 0}
}

type BaseCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId uint64 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// Types that are assignable to Command:
	//	*BaseCommand_Connect
	//	*BaseCommand_Connected
	//	*BaseCommand_Producer
	//	*BaseCommand_ProducerSuccess
	//	*BaseCommand_Subscribe
	//	*BaseCommand_SubscribeSuccess
	//	*BaseCommand_Send
	//	*BaseCommand_Message
	//	*BaseCommand_Ack
	//	*BaseCommand_Flow
	//	*BaseCommand_Unsubscribe
	//	*BaseCommand_Topics
	//	*BaseCommand_Error
	Command isBaseCommand_Command `protobuf_oneof:"Command"`
}

func (x *BaseCommand) Reset() {
	*x = BaseCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseCommand) ProtoMessage() {}

func (x *BaseCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseCommand.ProtoReflect.Descriptor instead.
func (*BaseCommand) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{0}
}

func (x *BaseCommand) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (m *BaseCommand) GetCommand() isBaseCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *BaseCommand) GetConnect() *Connect {
	if x, ok := x.GetCommand().(*BaseCommand_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *BaseCommand) GetConnected() *Connected {
	if x, ok := x.GetCommand().(*BaseCommand_Connected); ok {
		return x.Connected
	}
	return nil
}

func (x *BaseCommand) GetProducer() *Producer {
	if x, ok := x.GetCommand().(*BaseCommand_Producer); ok {
		return x.Producer
	}
	return nil
}

func (x *BaseCommand) GetProducerSuccess() *ProducerSuccess {
	if x, ok := x.GetCommand().(*BaseCommand_ProducerSuccess); ok {
		return x.ProducerSuccess
	}
	return nil
}

func (x *BaseCommand) GetSubscribe() *Subscribe {
	if x, ok := x.GetCommand().(*BaseCommand_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (x *BaseCommand) GetSubscribeSuccess() *SubscribeSuccess {
	if x, ok := x.GetCommand().(*BaseCommand_SubscribeSuccess); ok {
		return x.SubscribeSuccess
	}
	return nil
}

func (x *BaseCommand) GetSend() *Send {
	if x, ok := x.GetCommand().(*BaseCommand_Send); ok {
		return x.Send
	}
	return nil
}

func (x *BaseCommand) GetMessage() *Message {
	if x, ok := x.GetCommand().(*BaseCommand_Message); ok {
		return x.Message
	}
	return nil
}

func (x *BaseCommand) GetAck() *Ack {
	if x, ok := x.GetCommand().(*BaseCommand_Ack); ok {
		return x.Ack
	}
	return nil
}

func (x *BaseCommand) GetFlow() *Flow {
	if x, ok := x.GetCommand().(*BaseCommand_Flow); ok {
		return x.Flow
	}
	return nil
}

func (x *BaseCommand) GetUnsubscribe() *Unsubscribe {
	if x, ok := x.GetCommand().(*BaseCommand_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

func (x *BaseCommand) GetTopics() *Topics {
	if x, ok := x.GetCommand().(*BaseCommand_Topics); ok {
		return x.Topics
	}
	return nil
}

func (x *BaseCommand) GetError() *Error {
	if x, ok := x.GetCommand().(*BaseCommand_Error); ok {
		return x.Error
	}
	return nil
}

type isBaseCommand_Command interface {
	isBaseCommand_Command()
}

type BaseCommand_Connect struct {
	Connect *Connect `protobuf:"bytes,2,opt,name=connect,proto3,oneof"`
}

type BaseCommand_Connected struct {
	Connected *Connected `protobuf:"bytes,3,opt,name=connected,proto3,oneof"`
}

type BaseCommand_Producer struct {
	Producer *Producer `protobuf:"bytes,4,opt,name=producer,proto3,oneof"`
}

type BaseCommand_ProducerSuccess struct {
	ProducerSuccess *ProducerSuccess `protobuf:"bytes,5,opt,name=producer_success,json=producerSuccess,proto3,oneof"`
}

type BaseCommand_Subscribe struct {
	Subscribe *Subscribe `protobuf:"bytes,6,opt,name=subscribe,proto3,oneof"`
}

type BaseCommand_SubscribeSuccess struct {
	SubscribeSuccess *SubscribeSuccess `protobuf:"bytes,7,opt,name=subscribe_success,json=subscribeSuccess,proto3,oneof"`
}

type BaseCommand_Send struct {
	// 消费者发送消息给服务端
	Send *Send `protobuf:"bytes,8,opt,name=send,proto3,oneof"`
}

type BaseCommand_Message struct {
	// 服务端发送消息给客户端
	Message *Message `protobuf:"bytes,9,opt,name=message,proto3,oneof"`
}

type BaseCommand_Ack struct {
	// 消费者确认消息已消费
	Ack *Ack `protobuf:"bytes,10,opt,name=ack,proto3,oneof"`
}

type BaseCommand_Flow struct {
	// 消费者通知服务端可消费数量
	Flow *Flow `protobuf:"bytes,11,opt,name=flow,proto3,oneof"`
}

type BaseCommand_Unsubscribe struct {
	// 消费者取消订阅
	Unsubscribe *Unsubscribe `protobuf:"bytes,12,opt,name=unsubscribe,proto3,oneof"`
}

type BaseCommand_Topics struct {
	// 获取服务端当前的topics
	Topics *Topics `protobuf:"bytes,13,opt,name=topics,proto3,oneof"`
}

type BaseCommand_Error struct {
	// 服务端返回的结果
	Error *Error `protobuf:"bytes,14,opt,name=error,proto3,oneof"`
}

func (*BaseCommand_Connect) isBaseCommand_Command() {}

func (*BaseCommand_Connected) isBaseCommand_Command() {}

func (*BaseCommand_Producer) isBaseCommand_Command() {}

func (*BaseCommand_ProducerSuccess) isBaseCommand_Command() {}

func (*BaseCommand_Subscribe) isBaseCommand_Command() {}

func (*BaseCommand_SubscribeSuccess) isBaseCommand_Command() {}

func (*BaseCommand_Send) isBaseCommand_Command() {}

func (*BaseCommand_Message) isBaseCommand_Command() {}

func (*BaseCommand_Ack) isBaseCommand_Command() {}

func (*BaseCommand_Flow) isBaseCommand_Command() {}

func (*BaseCommand_Unsubscribe) isBaseCommand_Command() {}

func (*BaseCommand_Topics) isBaseCommand_Command() {}

func (*BaseCommand_Error) isBaseCommand_Command() {}

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 客户端名称
	ClientName string `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	// 加密方法
	AuthMethod Connect_AuthMethod `protobuf:"varint,2,opt,name=auth_method,json=authMethod,proto3,enum=command.Connect_AuthMethod" json:"auth_method,omitempty"`
	// 用户名
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// 加密后的密码
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{1}
}

func (x *Connect) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *Connect) GetAuthMethod() Connect_AuthMethod {
	if x != nil {
		return x.AuthMethod
	}
	return Connect_Unknown
}

func (x *Connect) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Connect) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Connected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *Connected) Reset() {
	*x = Connected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connected) ProtoMessage() {}

func (x *Connected) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connected.ProtoReflect.Descriptor instead.
func (*Connected) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{2}
}

func (x *Connected) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type Producer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     uint64              `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ProducerName string              `protobuf:"bytes,3,opt,name=producer_name,json=producerName,proto3" json:"producer_name,omitempty"`
	Topic        string              `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	AccessMode   Producer_AccessMode `protobuf:"varint,5,opt,name=access_mode,json=accessMode,proto3,enum=command.Producer_AccessMode" json:"access_mode,omitempty"`
}

func (x *Producer) Reset() {
	*x = Producer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Producer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Producer) ProtoMessage() {}

func (x *Producer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Producer.ProtoReflect.Descriptor instead.
func (*Producer) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{3}
}

func (x *Producer) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *Producer) GetProducerName() string {
	if x != nil {
		return x.ProducerName
	}
	return ""
}

func (x *Producer) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Producer) GetAccessMode() Producer_AccessMode {
	if x != nil {
		return x.AccessMode
	}
	return Producer_Unknown
}

type ProducerSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId uint64 `protobuf:"varint,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
}

func (x *ProducerSuccess) Reset() {
	*x = ProducerSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProducerSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerSuccess) ProtoMessage() {}

func (x *ProducerSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerSuccess.ProtoReflect.Descriptor instead.
func (*ProducerSuccess) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{4}
}

func (x *ProducerSuccess) GetProducerId() uint64 {
	if x != nil {
		return x.ProducerId
	}
	return 0
}

type Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     uint64                     `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ConsumerName string                     `protobuf:"bytes,2,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty"`
	Topic        string                     `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	SubName      string                     `protobuf:"bytes,4,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	SubType      Subscribe_SubscriptionType `protobuf:"varint,5,opt,name=sub_type,json=subType,proto3,enum=command.Subscribe_SubscriptionType" json:"sub_type,omitempty"`
}

func (x *Subscribe) Reset() {
	*x = Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscribe) ProtoMessage() {}

func (x *Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscribe.ProtoReflect.Descriptor instead.
func (*Subscribe) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{5}
}

func (x *Subscribe) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *Subscribe) GetConsumerName() string {
	if x != nil {
		return x.ConsumerName
	}
	return ""
}

func (x *Subscribe) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Subscribe) GetSubName() string {
	if x != nil {
		return x.SubName
	}
	return ""
}

func (x *Subscribe) GetSubType() Subscribe_SubscriptionType {
	if x != nil {
		return x.SubType
	}
	return Subscribe_Unknown
}

type SubscribeSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerId uint64 `protobuf:"varint,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
}

func (x *SubscribeSuccess) Reset() {
	*x = SubscribeSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeSuccess) ProtoMessage() {}

func (x *SubscribeSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeSuccess.ProtoReflect.Descriptor instead.
func (*SubscribeSuccess) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeSuccess) GetConsumerId() uint64 {
	if x != nil {
		return x.ConsumerId
	}
	return 0
}

type Send struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProducerId uint64 `protobuf:"varint,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	TopicName  string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Timestamp  int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SequenceId uint64 `protobuf:"varint,5,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	Payload    []byte `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Send) Reset() {
	*x = Send{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Send) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Send) ProtoMessage() {}

func (x *Send) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Send.ProtoReflect.Descriptor instead.
func (*Send) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{7}
}

func (x *Send) GetProducerId() uint64 {
	if x != nil {
		return x.ProducerId
	}
	return 0
}

func (x *Send) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *Send) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Send) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Send) GetSequenceId() uint64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

func (x *Send) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{8}
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerId uint64      `protobuf:"varint,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	AckType    Ack_AckType `protobuf:"varint,2,opt,name=ack_type,json=ackType,proto3,enum=command.Ack_AckType" json:"ack_type,omitempty"`
	MessageIds []uint64    `protobuf:"varint,3,rep,packed,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{9}
}

func (x *Ack) GetConsumerId() uint64 {
	if x != nil {
		return x.ConsumerId
	}
	return 0
}

func (x *Ack) GetAckType() Ack_AckType {
	if x != nil {
		return x.AckType
	}
	return Ack_Unknown
}

func (x *Ack) GetMessageIds() []uint64 {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerId uint64 `protobuf:"varint,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	MsgPermits uint64 `protobuf:"varint,2,opt,name=msg_permits,json=msgPermits,proto3" json:"msg_permits,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{10}
}

func (x *Flow) GetConsumerId() uint64 {
	if x != nil {
		return x.ConsumerId
	}
	return 0
}

func (x *Flow) GetMsgPermits() uint64 {
	if x != nil {
		return x.MsgPermits
	}
	return 0
}

type Unsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerId uint64 `protobuf:"varint,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
}

func (x *Unsubscribe) Reset() {
	*x = Unsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsubscribe) ProtoMessage() {}

func (x *Unsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsubscribe.ProtoReflect.Descriptor instead.
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{11}
}

func (x *Unsubscribe) GetConsumerId() uint64 {
	if x != nil {
		return x.ConsumerId
	}
	return 0
}

type Topics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Topics) Reset() {
	*x = Topics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topics) ProtoMessage() {}

func (x *Topics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topics.ProtoReflect.Descriptor instead.
func (*Topics) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{12}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Error_Code `protobuf:"varint,1,opt,name=code,proto3,enum=command.Error_Code" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_command_command_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_command_command_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_command_command_proto_rawDescGZIP(), []int{13}
}

func (x *Error) GetCode() Error_Code {
	if x != nil {
		return x.Code
	}
	return Error_Unknown
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_command_command_proto protoreflect.FileDescriptor

var file_proto_command_command_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xae, 0x05, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x12, 0x45, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x38, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x10, 0x02, 0x22, 0x28, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x32,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22,
	0x33, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08,
	0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x63, 0x6b, 0x2e, 0x41, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x36,
	0x0a, 0x07, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x75, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x22, 0x48, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73,
	0x22, 0x2e, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x08, 0x0a, 0x06, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x6e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x04, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x69, 0x74, 0x63, 0x61, 0x70, 0x79, 0x62, 0x61, 0x72, 0x61, 0x2f, 0x67, 0x65, 0x63,
	0x6b, 0x6f, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_command_command_proto_rawDescOnce sync.Once
	file_proto_command_command_proto_rawDescData = file_proto_command_command_proto_rawDesc
)

func file_proto_command_command_proto_rawDescGZIP() []byte {
	file_proto_command_command_proto_rawDescOnce.Do(func() {
		file_proto_command_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_command_command_proto_rawDescData)
	})
	return file_proto_command_command_proto_rawDescData
}

var file_proto_command_command_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_command_command_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_command_command_proto_goTypes = []interface{}{
	(Connect_AuthMethod)(0),         // 0: command.Connect.AuthMethod
	(Producer_AccessMode)(0),        // 1: command.Producer.AccessMode
	(Subscribe_SubscriptionType)(0), // 2: command.Subscribe.SubscriptionType
	(Ack_AckType)(0),                // 3: command.Ack.AckType
	(Error_Code)(0),                 // 4: command.Error.Code
	(*BaseCommand)(nil),             // 5: command.BaseCommand
	(*Connect)(nil),                 // 6: command.Connect
	(*Connected)(nil),               // 7: command.Connected
	(*Producer)(nil),                // 8: command.Producer
	(*ProducerSuccess)(nil),         // 9: command.ProducerSuccess
	(*Subscribe)(nil),               // 10: command.Subscribe
	(*SubscribeSuccess)(nil),        // 11: command.SubscribeSuccess
	(*Send)(nil),                    // 12: command.Send
	(*Message)(nil),                 // 13: command.Message
	(*Ack)(nil),                     // 14: command.Ack
	(*Flow)(nil),                    // 15: command.Flow
	(*Unsubscribe)(nil),             // 16: command.Unsubscribe
	(*Topics)(nil),                  // 17: command.Topics
	(*Error)(nil),                   // 18: command.Error
}
var file_proto_command_command_proto_depIdxs = []int32{
	6,  // 0: command.BaseCommand.connect:type_name -> command.Connect
	7,  // 1: command.BaseCommand.connected:type_name -> command.Connected
	8,  // 2: command.BaseCommand.producer:type_name -> command.Producer
	9,  // 3: command.BaseCommand.producer_success:type_name -> command.ProducerSuccess
	10, // 4: command.BaseCommand.subscribe:type_name -> command.Subscribe
	11, // 5: command.BaseCommand.subscribe_success:type_name -> command.SubscribeSuccess
	12, // 6: command.BaseCommand.send:type_name -> command.Send
	13, // 7: command.BaseCommand.message:type_name -> command.Message
	14, // 8: command.BaseCommand.ack:type_name -> command.Ack
	15, // 9: command.BaseCommand.flow:type_name -> command.Flow
	16, // 10: command.BaseCommand.unsubscribe:type_name -> command.Unsubscribe
	17, // 11: command.BaseCommand.topics:type_name -> command.Topics
	18, // 12: command.BaseCommand.error:type_name -> command.Error
	0,  // 13: command.Connect.auth_method:type_name -> command.Connect.AuthMethod
	1,  // 14: command.Producer.access_mode:type_name -> command.Producer.AccessMode
	2,  // 15: command.Subscribe.sub_type:type_name -> command.Subscribe.SubscriptionType
	3,  // 16: command.Ack.ack_type:type_name -> command.Ack.AckType
	4,  // 17: command.Error.code:type_name -> command.Error.Code
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_command_command_proto_init() }
func file_proto_command_command_proto_init() {
	if File_proto_command_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_command_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Producer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProducerSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Send); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_command_command_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_command_command_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BaseCommand_Connect)(nil),
		(*BaseCommand_Connected)(nil),
		(*BaseCommand_Producer)(nil),
		(*BaseCommand_ProducerSuccess)(nil),
		(*BaseCommand_Subscribe)(nil),
		(*BaseCommand_SubscribeSuccess)(nil),
		(*BaseCommand_Send)(nil),
		(*BaseCommand_Message)(nil),
		(*BaseCommand_Ack)(nil),
		(*BaseCommand_Flow)(nil),
		(*BaseCommand_Unsubscribe)(nil),
		(*BaseCommand_Topics)(nil),
		(*BaseCommand_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_command_command_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_command_command_proto_goTypes,
		DependencyIndexes: file_proto_command_command_proto_depIdxs,
		EnumInfos:         file_proto_command_command_proto_enumTypes,
		MessageInfos:      file_proto_command_command_proto_msgTypes,
	}.Build()
	File_proto_command_command_proto = out.File
	file_proto_command_command_proto_rawDesc = nil
	file_proto_command_command_proto_goTypes = nil
	file_proto_command_command_proto_depIdxs = nil
}
